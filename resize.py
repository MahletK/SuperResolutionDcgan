
from PIL import Image
# open an image file (.bmp,.jpg,.png,.gif) you have in the working folder
# imageFile = "img0.png"
# im1 = Image.open(imageFile)
 # adjust width and height to your needs
# width = 128
# height = 128
    # use one of these filter options to resize the image
# im2 = im1.resize((width, height), Image.NEAREST)      # use nearest neighbour
# im3 = im1.resize((width, height), Image.BILINEAR)     # linear interpolation in a 2x2 environment
# im4 = im1.resize((width, height), Image.BICUBIC)      # cubic spline interpolation in a 4x4 environment
# im5 = im1.resize((width, height), Image.ANTIALIAS)    # best down-sizing filter
# ext = ".jpg"
# im2.save("NEAREST" + ext)
# im3.save("BILINEAR" + ext)
# im4.save("BICUBIC" + ext)
# im5.save("ANTIALIAS" + ext)
    # optional image viewer ...
    # image viewer  i_view32.exe   free download from:  http://www.irfanview.com/
    # avoids the many huge bitmap files generated by PIL's show()
import os
list = os.listdir('RAISE_LR') # dir is your directory path
number_files = len(list)
print (number_files)
entries = os.listdir('RAISE_LR/')
for entry, i in zip(entries, range(number_files)):
    str(entry)
    #im1 = Image.open(entry)
    im1 = Image.open(os.path.join('RAISE_LR', entry))
 # adjust width and height to your needs
    width = 128
    height = 128
    im2 = im1.resize((width, height), Image.NEAREST) 
         # use nearest neighbour
    im3 = im1.resize((width, height), Image.BILINEAR)     # linear interpolation in a 2x2 environment
    im4 = im1.resize((width, height), Image.BICUBIC)      # cubic spline interpolation in a 4x4 environment
    im5 = im1.resize((width, height), Image.ANTIALIAS)    # best down-sizing filter
    ext = ".jpg"
    save_path = 'images/'
    format = 'JPG'
    name = "NEAREST" + str(i) 
    # if format.upper() not in Image.SAVE:
    #    Image.init()
    #    save_handler = Image.SAVE[format.upper()]
    im2.save( name + ext)
# im3.save("BILINEAR" + ext)
# im4.save("BICUBIC" + ext)
# im5.save("ANTIALIAS" + ext)
